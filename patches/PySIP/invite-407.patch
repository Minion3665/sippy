Commit ID: 3dde946abe5f70d282afcd611b52840bb795df1e
Change ID: nlqnrkkvtvmsuvyunppxtspxnyrponqq
Author   : Skyler Grey <sky@a.starrysky.fyi> (2025-07-02 15:11:57)
Committer: Skyler Grey <sky@a.starrysky.fyi> (2025-07-02 20:28:33)

    fix: allow failed invites with 407

    Previously PySIP only allowed failed invites to have error 401. My SIP
    provider sends 407 when the proxy server fails to authenticate and uses
    a different header... (and it looks from posts on the internet[1] that
    this may be somewhat common)

    [1]: https://andrewjprokop.wordpress.com/2015/01/27/understanding-sip-authentication/

diff --git a/PySIP/sip_call.py b/PySIP/sip_call.py
index 61f433e167..3213e0be5b 100644
--- a/PySIP/sip_call.py
+++ b/PySIP/sip_call.py
@@ -644,7 +644,7 @@
         if msg.call_id != self.call_id:
             return
 
-        if msg.status == SIPStatus(401) and msg.method == "INVITE":
+        if (msg.status == SIPStatus(401) or msg.status == SIPStatus(407)) and msg.method == "INVITE":
             # Handling the auth of the invite
             self.dialogue.remote_tag = msg.to_tag
             transaction = self.dialogue.find_transaction(msg.branch)
diff --git a/PySIP/sip_client.py b/PySIP/sip_client.py
index be6d47e5a0..e4d57aaac8 100644
--- a/PySIP/sip_client.py
+++ b/PySIP/sip_client.py
@@ -227,6 +227,7 @@
             unregister = True if self.register_tags["type"] == "UNREGISTER" else False
             if not received_message:
                 return
+            print(f"Building register message with {received_message.data}")
             nonce = received_message.nonce
             realm = received_message.realm
             cseq = self.register_counter.current()
diff --git a/PySIP/sip_core.py b/PySIP/sip_core.py
index e781da717c..04c998e26f 100644
--- a/PySIP/sip_core.py
+++ b/PySIP/sip_core.py
@@ -719,6 +719,17 @@
         branch_header = self.get_header("Via")
         self.branch = branch_header.split("branch=")[1].split(";")[0]
 
+        auth_header_names = ["WWW-Authenticate", "Authorization", "Proxy-Authenticate"]
+        for auth_header_name in auth_header_names:
+            auth_header = self.get_header(auth_header_name)
+            if auth_header:
+                try:
+                    self.nonce = auth_header.split('nonce="')[1].split('"')[0]
+                    self.realm = auth_header.split('realm="')[1].split('"')[0]
+                    self.qop = auth_header.split("qop=")[1].split('"')[1]
+                except IndexError:
+                    pass
+
         if self.type == SIPMessageType.RESPONSE:
             try:
                 self.status = SIPStatus(int(self.type_header[1]))
@@ -727,11 +738,6 @@
 
                 # RPort
                 self.rport = via_header.split("rport=")[1].split(";")[0]
-                auth_header = self.get_header("WWW-Authenticate")
-                if auth_header:
-                    self.nonce = auth_header.split('nonce="')[1].split('"')[0]
-                    self.realm = auth_header.split('realm="')[1].split('"')[0]
-                    self.qop = auth_header.split("qop=")[1].split('"')[1]
                 # dialog_id
                 contact_header = self.get_header("Contact")
                 if contact_header:
